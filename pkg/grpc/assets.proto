syntax = "proto3";
package assets_grpc;

option go_package = "goleague/pkg/assets_grpc";

/*
* Service to revalidate a item or champion cache.
* Only will be fired if the item or champion are missing on the cache.
* The most probable situation would be on new champion releases and item releases.
* Since the cache will be revalidated once a day.
* The API will call on the fetcher if the item or champion was choosen on a match.
*/
service assetsService{
    rpc RevalidateChampionCache(ChampionId) returns (Champion){};
    rpc RevalidateItemCache(ItemId) returns (Item){};
}

message ChampionId{
    string id = 1;
}

message ItemId{
    string id = 1;
}

// Default image structure with what we need from the DataDragon.
message Image{
    string fullImage = 1;
    string sprite = 2;
    int32 x = 3;
    int32 y = 4;
    int32 w = 5;
    int32 h = 6;
}

// Spell data for the champion.
message Spell{
  string id = 1;
  string name = 2;
  string description = 3;
  optional string cooldown = 4;
  optional string cost = 5;
  Image image = 6;
  string ChampionId = 7;
}

// Champion data that we need to display.
message Champion{
  string id = 1;
  string key = 2;
  string name = 3;
  string title = 4;
  Image image = 5;
  repeated Spell spells = 6;
  Spell passive =  7;
}

// Gold for the item.
message Gold{
  int32 base = 1;
  int32 total = 2;
  int32 sell = 3;
}

// Item data that we need to display.
message Item{
  string id = 1;
  string name = 2;
  string description = 3;
  string plaintext = 4;
  Image image = 5;
  Gold gold = 6;
}
